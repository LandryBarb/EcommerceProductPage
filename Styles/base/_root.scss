
@use '../abstracts' as *;
@use '../base/typography' as *;

:root {
    /**Colors**/
    @each $color, $shades in $colors {
        @each $shade, $value in $shades {
            --clr-#{$color}-#{$shade}: #{$value};
        }
    }
    /**End Colors**/
    /**Font Sizes - custom props**/
    @each $screen-size, $font-size in $type-scale {
        @if $screen-size == small {
            @each $size, $value in $font-size {
                --fs-#{$size}: #{$value};
            }
        }
        @else {
            @include mediaQry(medium) {
                @each $size, $value in $font-size {
                    --fs-#{$size}: #{$value};
                }
            }
        }
    }
    /**End Font Sizes**/
    /**Font Weights**/
    @each $font-size, $value in $font-weights {
        --fw-#{$font-size}: #{$value};
    }
    /**End Font Weights**/
    /**sPACING**/
    @each $space-size, $names in $spacing {
        @each $name, $value in $names {
            --sp-#{$name}: #{$value};
        }
    }
    /**End sPACING**/

/*    --fw-sm: 500;
    --fw-base: 700;
    --sp-base: 16px;*/
    /*   --sp-sm-1: calc(7/8 * var(--sp-base));
    --sp-sm-2: calc(6/8 * var(--sp-base));
    --sp-sm-3: calc(5/8 * var(--sp-base));
    --sp-sm-4: calc(4/8 * var(--sp-base));
    --sp-sm-5: calc(3/8 * var(--sp-base));
    --sp-sm-6: calc(2/8 * var(--sp-base));
    --sp-sm-7: calc(1/8 * var(--sp-base));
    --sp-lg-7: calc(1 + 7/8 * var(--sp-base));
    --sp-lg-6: calc(1 + 6/8 * var(--sp-base));
    --sp-lg-5: calc(1 + 5/8 * var(--sp-base));
    --sp-lg-4: calc(1 + 4/8 * var(--sp-base));
    --sp-lg-3: calc(1 + 3/8 * var(--sp-base));
    --sp-lg-2: calc(1 + 2/8 * var(--sp-base));
    --sp-lg-1: calc(1 + 1/8 * var(--sp-base));*/
 /*   --bd-radius: 24px;*/

 --body:hsl(var(--clr-black-100));
}
